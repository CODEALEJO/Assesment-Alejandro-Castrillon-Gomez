// <auto-generated />
using System;
using Assesment_Alejandro_Castrillon_Gomez_bernslee.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assesment_Alejandro_Castrillon_Gomez_bernslee.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241115143934_AddRoleToUser")]
    partial class AddRoleToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Assesment_Alejandro_Castrillon_Gomez_bernslee.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Date");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctor_id");

                    b.Property<string>("Motive")
                        .HasColumnType("longtext")
                        .HasColumnName("motive");

                    b.Property<string>("Note")
                        .HasColumnType("longtext")
                        .HasColumnName("note");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patient_id");

                    b.Property<string>("State")
                        .HasColumnType("longtext")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 11, 16, 9, 39, 34, 327, DateTimeKind.Local).AddTicks(2069),
                            DoctorId = 1,
                            Motive = "Consulta General",
                            Note = "Revisión anual",
                            PatientId = 1,
                            State = "Pendiente"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 11, 17, 9, 39, 34, 327, DateTimeKind.Local).AddTicks(2095),
                            DoctorId = 2,
                            Motive = "Chequeo de salud",
                            Note = "Chequeo regular",
                            PatientId = 2,
                            State = "Confirmada"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2024, 11, 18, 9, 39, 34, 327, DateTimeKind.Local).AddTicks(2097),
                            DoctorId = 3,
                            Motive = "Revisión de resultados",
                            Note = "Resultados de análisis",
                            PatientId = 3,
                            State = "Completada"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2024, 11, 19, 9, 39, 34, 327, DateTimeKind.Local).AddTicks(2099),
                            DoctorId = 4,
                            Motive = "Urgencia médica",
                            Note = "Accidente en el trabajo",
                            PatientId = 4,
                            State = "Pendiente"
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2024, 11, 20, 9, 39, 34, 327, DateTimeKind.Local).AddTicks(2101),
                            DoctorId = 1,
                            Motive = "Control post operatorio",
                            Note = "Revisión después de la cirugía",
                            PatientId = 5,
                            State = "Confirmada"
                        });
                });

            modelBuilder.Entity("Assesment_Alejandro_Castrillon_Gomez_bernslee.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Specialty")
                        .HasColumnType("longtext")
                        .HasColumnName("specialty");

                    b.HasKey("Id");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "carlos.gomez@hospital.com",
                            Name = "Dr. Carlos Gómez",
                            Specialty = "Cardiología"
                        },
                        new
                        {
                            Id = 2,
                            Email = "maria.lopez@hospital.com",
                            Name = "Dra. María López",
                            Specialty = "Neurología"
                        },
                        new
                        {
                            Id = 3,
                            Email = "juan.perez@hospital.com",
                            Name = "Dr. Juan Pérez",
                            Specialty = "Pediatría"
                        },
                        new
                        {
                            Id = 4,
                            Email = "laura.martinez@hospital.com",
                            Name = "Dra. Laura Martínez",
                            Specialty = "Ortopedia"
                        },
                        new
                        {
                            Id = 5,
                            Email = "alberto.sanchez@hospital.com",
                            Name = "Dr. Alberto Sánchez",
                            Specialty = "Ginecología"
                        });
                });

            modelBuilder.Entity("Assesment_Alejandro_Castrillon_Gomez_bernslee.Models.HistoryDating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_update");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patient_id");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("history_datings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Paciente con hipertensión diagnosticada.",
                            LastUpdate = new DateTime(2024, 10, 15, 9, 39, 34, 327, DateTimeKind.Local).AddTicks(2326),
                            PatientId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Paciente con antecedentes familiares de diabetes.",
                            LastUpdate = new DateTime(2024, 9, 15, 9, 39, 34, 327, DateTimeKind.Local).AddTicks(2336),
                            PatientId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Paciente con diagnóstico reciente de asma.",
                            LastUpdate = new DateTime(2024, 8, 15, 9, 39, 34, 327, DateTimeKind.Local).AddTicks(2338),
                            PatientId = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Paciente con cirugía reciente de rodilla.",
                            LastUpdate = new DateTime(2024, 7, 15, 9, 39, 34, 327, DateTimeKind.Local).AddTicks(2340),
                            PatientId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Paciente con alergias estacionales.",
                            LastUpdate = new DateTime(2024, 6, 15, 9, 39, 34, 327, DateTimeKind.Local).AddTicks(2342),
                            PatientId = 5
                        });
                });

            modelBuilder.Entity("Assesment_Alejandro_Castrillon_Gomez_bernslee.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "carlos.gonzalez@example.com",
                            Name = "Carlos González",
                            Phone = "3012345678"
                        },
                        new
                        {
                            Id = 2,
                            Email = "ana.perez@example.com",
                            Name = "Ana Pérez",
                            Phone = "3023456789"
                        },
                        new
                        {
                            Id = 3,
                            Email = "luis.martinez@example.com",
                            Name = "Luis Martínez",
                            Phone = "3034567890"
                        },
                        new
                        {
                            Id = 4,
                            Email = "sofia.rodriguez@example.com",
                            Name = "Sofía Rodríguez",
                            Phone = "3045678901"
                        },
                        new
                        {
                            Id = 5,
                            Email = "juan.perez@example.com",
                            Name = "Juan Pérez",
                            Phone = "3056789012"
                        });
                });

            modelBuilder.Entity("Assesment_Alejandro_Castrillon_Gomez_bernslee.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext")
                        .HasColumnName("password_hash");

                    b.Property<string>("Role")
                        .HasColumnType("longtext")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@example.com",
                            FullName = "John",
                            PasswordHash = "hashedpassword1",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane.smith@example.com",
                            FullName = "Jane",
                            PasswordHash = "hashedpassword2",
                            Role = "Doctor"
                        },
                        new
                        {
                            Id = 3,
                            Email = "jim.brown@example.com",
                            FullName = "Jim",
                            PasswordHash = "hashedpassword3",
                            Role = "Patient"
                        });
                });

            modelBuilder.Entity("Assesment_Alejandro_Castrillon_Gomez_bernslee.Models.Appointment", b =>
                {
                    b.HasOne("Assesment_Alejandro_Castrillon_Gomez_bernslee.Models.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assesment_Alejandro_Castrillon_Gomez_bernslee.Models.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Assesment_Alejandro_Castrillon_Gomez_bernslee.Models.HistoryDating", b =>
                {
                    b.HasOne("Assesment_Alejandro_Castrillon_Gomez_bernslee.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Assesment_Alejandro_Castrillon_Gomez_bernslee.Models.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Assesment_Alejandro_Castrillon_Gomez_bernslee.Models.Patient", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
